name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - '.devcontainer/**'
      - '.vscode/**'
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.devcontainer/**'
      - '.vscode/**'
      - '**.md'
  workflow_dispatch:

permissions: read-all

env:
  CARGO_INCREMENTAL: 0

jobs:
  core:
    name: Core
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup show

      - name: Manage Rust cache
        uses: actions/cache@v3
        with:
          key: rust-cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: rust-cache-${{ runner.os }}-cargo-
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/

      - name: Install devtools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-binstall,cargo-llvm-cov,cargo-nextest

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Check code formatting
        working-directory: src-tauri
        run: cargo fmt --check

      - name: Lint code
        working-directory: src-tauri
        run: cargo clippy

      - name: Run tests
        working-directory: src-tauri
        run: |
          cargo llvm-cov nextest --workspace --lcov --output-path lcov.info
          cargo llvm-cov report --summary-only

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: src-tauri/lcov.info
          flags: unit

  web:
    name: Web
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install PNPM deps
        run: pnpm install

      - name: Check code formatting
        run: pnpm exec prettier --check .

      - name: Lint code
        run: pnpm exec eslint .

      - name: Run type checks
        run: pnpm exec tsc --noEmit

      - name: Run tests
        run: pnpm run test

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage/clover.xml
          flags: unit

  e2e:
    name: E2E Testing
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [core, web]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup show

      - name: Manage Rust cache
        uses: actions/cache@v3
        with:
          key: rust-cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: rust-cache-${{ runner.os }}-cargo-
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/

      - name: Install devtools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-binstall,tauri-driver

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf webkit2gtk-driver xauth xvfb

      - name: Set up PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install PNPM deps
        run: pnpm install

      - name: Run end-to-end tests
        env:
          NO_AT_BRIDGE: 1
        run: |
          cd src-tauri && cargo build --release && cd -
          xvfb-run pnpm run e2e

  build-and-release:
    name: Build and Release
    if: startsWith(github.ref, 'refs/tags/v') # v*
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    needs: e2e
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup show

      - name: install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Set up PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install PNPM deps
        run: pnpm install

      - name: Build and release Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tagName: v__VERSION__
          releaseName: v__VERSION__
